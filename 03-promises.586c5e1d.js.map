{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,yBAKxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXPT,EAAKC,OAAOe,iBAAiB,UAe7B,SAAsBC,GACpBA,EAAEC,iBACGD,EAAEE,OAAOC,QAMd,IAJA,IAAIC,EAAaC,OAAOtB,EAAKI,aAAamB,OACtCC,EAAYF,OAAOtB,EAAKK,YAAYkB,OACpCE,EAASH,OAAOtB,EAAKM,cAAciB,OAE9BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EAAcmB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBX,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBX,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DY,GAAcG,EAEhBP,EAAEiB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  fomrEl: document.querySelector('.form'),\n  inputDelayEl: document.querySelector('input[name=\"delay\"]'),\n  inputStepEl: document.querySelector('input[name=\"step\"]'),\n  inputAmountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.fomrEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  if (!e.target.tagName === 'BUTTON') return;\n\n  let firstDelay = Number(refs.inputDelayEl.value);\n  let delayStep = Number(refs.inputStepEl.value);\n  let amount = Number(refs.inputAmountEl.value);\n\n  for (let i = 1; i <= amount; i += 1, i > 0) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += delayStep;\n  }\n  e.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","fomrEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","target","tagName","firstDelay","Number","value","delayStep","amount","i","then","param","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.586c5e1d.js.map"}